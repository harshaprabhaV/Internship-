// This file would typically be located at: components/Header.js
// It uses next/link for navigation and next/router's useRouter hook
// to highlight the active menu item.
import Link from 'next/link';
import { useRouter } from 'next/router'; // For Pages Router. For App Router, use 'next/navigation'.
import React, { useState } from 'react';
import { Home, Info, Mail, Menu, X } from 'lucide-react'; // Importing icons for visual appeal

/**
 * Header Component
 * Represents the main navigation bar of the application.
 * It's responsive, collapsing into a hamburger menu on smaller screens.
 * Uses useRouter to highlight the currently active link.
 * @param {object} props - Component props (none required for this example as it uses useRouter)
 */
export function Header() {
  const router = useRouter(); // Initialize the router hook to get current path
  const [isMenuOpen, setIsMenuOpen] = useState(false); // State for mobile menu toggle

  // Define navigation items with their names, paths, and associated icons
  const navItems = [
    { name: 'Home', path: '/', icon: Home },
    { name: 'About', path: '/about', icon: Info },
    { name: 'Contact', path: '/contact', icon: Mail },
  ];

  return (
    <header className="bg-gradient-to-r from-blue-600 to-indigo-700 shadow-lg p-4 md:p-6 text-white font-inter rounded-b-xl">
      <div className="container mx-auto flex justify-between items-center">
        {/* Site Title / Logo - links to homepage */}
        <Link href="/" className="text-3xl font-bold tracking-tight hover:text-gray-200 transition-colors duration-200">
            MyNextApp
        </Link>

        {/* Desktop Navigation */}
        <nav className="hidden md:flex space-x-6">
          {navItems.map((item) => (
            <Link
              key={item.path}
              href={item.path}
              className={`flex items-center space-x-2 py-2 px-4 rounded-lg transition-all duration-300 ease-in-out
                ${router.pathname === item.path ? 'bg-indigo-800 text-white shadow-md' : 'hover:bg-blue-700 hover:text-white'}
                focus:outline-none focus:ring-2 focus:ring-blue-300`}
            >
              <item.icon size={20} /> {/* Render the icon component */}
              <span className="text-lg font-medium">{item.name}</span>
            </Link>
          ))}
        </nav>

        {/* Mobile Menu Button (Hamburger) */}
        <div className="md:hidden">
          <button
            onClick={() => setIsMenuOpen(!isMenuOpen)}
            className="text-white focus:outline-none focus:ring-2 focus:ring-blue-300 p-2 rounded-md transition-transform duration-300 ease-in-out"
            aria-label={isMenuOpen ? "Close menu" : "Open menu"}
          >
            {isMenuOpen ? <X size={28} /> : <Menu size={28} />} {/* Toggle icon based on menu state */}
          </button>
        </div>
      </div>

      {/* Mobile Navigation Menu - appears when hamburger is clicked */}
      {isMenuOpen && (
        <nav className="md:hidden mt-4 bg-indigo-700 rounded-lg shadow-inner py-2 animate-slide-down">
          {navItems.map((item) => (
            <Link
              key={item.path}
              href={item.path}
              onClick={() => setIsMenuOpen(false)} // Close menu after clicking a link
              className={`block w-full text-left py-3 px-6 text-xl transition-all duration-300 ease-in-out
                ${router.pathname === item.path ? 'bg-indigo-800 text-white font-semibold' : 'text-gray-200 hover:bg-blue-600 hover:text-white'}
                flex items-center space-x-3 focus:outline-none focus:ring-2 focus:ring-blue-300`}
            >
              <item.icon size={22} /> {/* Render the icon component */}
              <span>{item.name}</span>
            </Link>
          ))}
        </nav>
      )}
    </header>
  );
}

// This file would typically be located at: components/Footer.js
/**
 * Footer Component
 * A simple, consistent footer that appears at the bottom of the page.
 */
export function Footer() {
  return (
    <footer className="bg-gray-800 shadow-inner p-6 text-white text-center rounded-t-xl mt-8">
      <div className="container mx-auto">
        <p className="text-sm">
          &copy; {new Date().getFullYear()} MyNextApp. All rights reserved.
        </p>
        <p className="text-xs text-gray-400 mt-2">
          Designed with <span className="text-red-500">&hearts;</span> by Gemini
        </p>
      </div>
    </footer>
  );
}


// This file would typically be located at: components/Layout.js
// It wraps all pages to provide a consistent header and footer.
// Note: In a real Next.js App Router setup, you'd typically have a root layout
// and potentially nested layouts. For Pages Router, this is a common pattern.
import React from 'react';
// Assuming Header and Footer are imported from their respective component files
// import { Header } from './Header';
// import { Footer } from './Footer';

/**
 * Layout Component
 * A wrapper component that provides a consistent layout (header, main content area, footer)
 * for all pages it encapsulates.
 * @param {object} props - Component props
 * @param {React.ReactNode} props.children - The content of the page to be rendered within the layout.
 */
export function Layout({ children }) {
  return (
    <div className="min-h-screen flex flex-col bg-gray-50 text-gray-800 font-inter">
      {/* Header component, always present at the top */}
      <Header />

      {/* Main content area, takes up available space and renders page-specific content */}
      <main className="flex-grow container mx-auto p-4 sm:p-6 lg:p-8">
        {children} {/* This is where the content of each individual page will be rendered */}
      </main>

      {/* Footer component, always present at the bottom */}
      <Footer />
    </div>
  );
}


// This would be your Next.js _app.js file (for Pages Router) or a root layout for App Router
// This file demonstrates how to apply the Layout component globally to your Next.js app.

// For Pages Router (_app.js):
// import { Layout } from '../components/Layout'; // Adjust path as needed
// import '../styles/globals.css'; // Your global CSS imports (e.g., Tailwind CSS setup)

// function MyApp({ Component, pageProps }) {
//   // If a page has a custom layout, use it; otherwise, wrap with the default Layout
//   const getLayout = Component.getLayout || ((page) => <Layout>{page}</Layout>);
//   return getLayout(<Component {...pageProps} />);
// }
// export default MyApp;


// Example Page Component (e.g., pages/index.js, pages/about.js, pages/contact.js)
// Demonstrates how to use the Layout component for individual pages.

// This component would typically be located at: pages/index.js
/**
 * HomePage Component
 * This is an example page that uses the Layout component for consistent header and footer.
 */
export function HomePage() {
  return (
    <div className="bg-white p-8 rounded-xl shadow-lg border border-gray-200">
      <h2 className="text-4xl font-extrabold text-blue-700 mb-4">Welcome to Our Homepage!</h2>
      <p className="text-lg leading-relaxed text-gray-700">
        This is the main content area for the home page. It demonstrates how the layout component provides a consistent header and footer across different "pages". We're excited to have you here!
      </p>
      <p className="mt-4 text-gray-600">
        Explore our features and learn more about what we do by navigating through the links above.
      </p>
      <div className="mt-6 p-4 bg-blue-50 border-l-4 border-blue-300 text-blue-800 rounded">
        <p className="font-semibold">Quick Tip:</p>
        <p>This entire setup is designed to be mobile-friendly and easily adaptable to your needs.</p>
      </div>
    </div>
  );
}

// You would typically define other pages similarly:
// export function AboutPage() { /* ... */ }
// export function ContactPage() { /* ... */ }


// Main App component (for the purpose of this single-file demonstration)
// In a real Next.js app, pages/index.js would export HomePage directly,
// and the Layout would be applied in _app.js or a root layout.
export default function App() {
  // Simulating Next.js routing for this standalone example
  const [currentPage, setCurrentPage] = useState('/'); // Default to home path

  // This useEffect would simulate router changes based on button clicks
  // In a real Next.js app, router.pathname would update automatically
  const PageContent = () => {
    switch (currentPage) {
      case '/':
        return <HomePage />;
      case '/about':
        return <AboutPage />;
      case '/contact':
        return <ContactPage />;
      default:
        return <HomePage />;
    }
  };

  // Helper to simulate Link behavior for this demo
  const Link = ({ href, children, className, onClick }) => {
    return (
      <button
        onClick={() => { setCurrentPage(href); onClick && onClick(); }}
        className={className}
      >
        {children}
      </button>
    );
  };

  // Dummy Page Components (for the demo's simulated routing)
  const AboutPage = () => (
    <div className="bg-white p-8 rounded-xl shadow-lg border border-gray-200">
      <h2 className="text-4xl font-extrabold text-green-700 mb-4">About Us</h2>
      <p className="text-lg leading-relaxed text-gray-700">
        We are a passionate team dedicated to building amazing web experiences. Our mission is to create intuitive, powerful, and beautiful applications that make a difference.
      </p>
      <p className="mt-4 text-gray-600">
        This section provides more details about our company, our values, and our journey.
      </p>
      <ul className="list-disc list-inside mt-6 text-gray-700 space-y-2">
        <li>Innovation and creativity are at our core.</li>
        <li>User experience is our top priority.</li>
        <li>We believe in clean code and scalable architectures.</li>
      </ul>
      <div className="mt-6 p-4 bg-green-50 border-l-4 border-green-300 text-green-800 rounded">
        <p className="font-semibold">Our Vision:</p>
        <p>To empower businesses and individuals with cutting-edge technology solutions.</p>
      </div>
    </div>
  );

  const ContactPage = () => (
    <div className="bg-white p-8 rounded-xl shadow-lg border border-gray-200">
      <h2 className="text-4xl font-extrabold text-purple-700 mb-4">Get in Touch!</h2>
      <p className="text-lg leading-relaxed text-gray-700">
        Have a question or want to collaborate? Feel free to reach out to us! We'd love to hear from you.
      </p>
      <div className="mt-6 space-y-4">
        <p className="flex items-center text-gray-700">
          <Mail size={20} className="mr-2 text-purple-600" /> Email: <a href="mailto:info@mynextapp.com" className="ml-2 text-blue-600 hover:underline">info@mynextapp.com</a>
        </p>
        <p className="flex items-center text-gray-700">
          <Home size={20} className="mr-2 text-purple-600" /> Address: 123 Web Dev Street, Tech City, 98765
        </p>
      </div>
      <div className="mt-6 p-4 bg-purple-50 border-l-4 border-purple-300 text-purple-800 rounded">
        <p className="font-semibold">Working Hours:</p>
        <p>Monday - Friday: 9:00 AM - 5:00 PM (Local Time)</p>
      </div>
    </div>
  );


  // Dummy useRouter for the demo
  const useRouter = () => ({
    pathname: currentPage,
  });


  return (
    <>
      <script src="https://cdn.tailwindcss.com"></script>
      <style>
        {`
          @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');
          .font-inter {
            font-family: 'Inter', sans-serif;
          }
          .animate-slide-down {
            animation: slideDown 0.3s ease-out forwards;
          }
          @keyframes slideDown {
            from {
              opacity: 0;
              transform: translateY(-20px);
            }
            to {
              opacity: 1;
              transform: translateY(0);
            }
          }
        `}
      </style>
      <Layout>
        <PageContent />
      </Layout>
    </>
  );
}
